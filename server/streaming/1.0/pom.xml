<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.10line.pinecone.server</groupId>
  <artifactId>streaming</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>
  <repositories>
  	<repository>
    	<id>maven.2</id>
        <name>Maven 2 Repository</name>
        <url>http://repo2.maven.org/maven2/</url>
    </repository>
  	<repository>
    	<id>jboss</id>
        <name>jboss repo</name>
        <url>http://repository.jboss.org/nexus/content/groups/public/</url>
	</repository>
	<repository>
    	<id>pinecone</id>
        <name>pinecone repo</name>
        <url>http://pinecone.googlecode.com/svn/repository</url>
	</repository>
  </repositories>
  <dependencies>
  	<!-- Pinecone SDK -->
  	<dependency>
  		<groupId>com.10line.pinecone</groupId>
  		<artifactId>sdk</artifactId>
  		<version>1.0</version>
  	</dependency>
  	<!-- Google App Engine meta-package -->
    <dependency>
    	<groupId>net.kindleit</groupId>
      	<artifactId>gae-runtime</artifactId>
      	<version>${gae.version}</version>
      	<type>pom</type>
    </dependency>     
	<!-- These dependencies are here just for enabling logging -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.6.1</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>0.9.24</version>
	</dependency>
	<!-- Spring Framework -->
	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-webmvc</artifactId>
  		<version>${spring.version}</version>
  	</dependency>
	<!-- JAX-RS RESTEasy -->
	<dependency>
    	<groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-spring</artifactId>
        <version>${resteasy.version}</version>
	</dependency>
    <dependency>
    	<groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxb-provider</artifactId>
        <version>${resteasy.version}</version>
    </dependency>
	<!-- Test scope -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.5</version>
		<scope>test</scope>
	</dependency>
	<!--
			GAE libraries for local testing as described here:
			http://code.google.com/appengine/docs/java/howto/unittesting.html
	-->
	<dependency>
		<groupId>com.google.appengine</groupId>
		<artifactId>appengine-api-labs</artifactId>
		<version>${gae.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.google.appengine</groupId>
		<artifactId>appengine-api-stubs</artifactId>
		<version>${gae.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.google.appengine</groupId>
		<artifactId>appengine-testing</artifactId>
		<version>${gae.version}</version>
		<scope>test</scope>
	</dependency>
	<!-- Servlet API -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>
  </dependencies>
  <build>
	<plugins>
		<plugin>
        	<!-- Separates the unit tests from the integration tests. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.8.1</version>
            <configuration>
            	<!-- Skip the default running of this plug-in (or everything is run twice...see below) -->
                <skip>true</skip>
                <!-- Show 100% of the lines from the stack trace (doesn't work) -->
                <trimStackTrace>false</trimStackTrace>
            </configuration>
            <executions>
            	<execution>
                	<id>unit-tests</id>
                    <phase>test</phase>
                    <goals>
                    	<goal>test</goal>
                    </goals>
                    <configuration>
                    	<!-- Never skip running the tests when the test phase is invoked -->
                        <skip>false</skip>
                        <includes>
                        	<!-- Include unit tests within integration-test phase. -->
                            <include>**/*Test.java</include>
                        </includes>
                        <excludes>
                        	<!-- Exclude integration tests within (unit) test phase. -->
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                    </configuration>
                </execution>
                <execution>
                	<id>integration-tests</id>
                    <phase>integration-test</phase>
                    <goals>
                    	<goal>test</goal>
                    </goals>
                    <configuration>
                    	<!-- Never skip running the tests when the integration-test phase is invoked -->
                        <skip>false</skip>
                        <includes>
                        	<!-- Include integration tests within integration-test phase. -->
                            <include>**/*IntegrationTest.java</include>
                        </includes>
                    </configuration>
                </execution>
            </executions>
        </plugin>
		<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
		-->
		<plugin>
			<groupId>net.kindleit</groupId>
			<artifactId>maven-gae-plugin</artifactId>
			<version>0.8.4</version>
			<executions>
            	<execution>
                	<id>start-gae-server</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                    	<goal>start</goal>
                    </goals>
                </execution>
                <execution>
                	<id>stop-gae-server</id>
                    <phase>post-integration-test</phase>
                    <goals>
                    	<goal>stop</goal>
                    </goals>
                </execution>
            </executions>
        	<dependencies>
          		<dependency>
            		<groupId>net.kindleit</groupId>
            		<artifactId>gae-runtime</artifactId>
            		<version>${gae.version}</version>
            		<type>pom</type>
          		</dependency>
        	</dependencies>
		</plugin>
		<!--
				Upload application to the appspot automatically, during
				release:perform
		-->
		<plugin>
			<artifactId>maven-release-plugin</artifactId>
			<configuration>
				<goals>gae:deploy</goals>
			</configuration>
		</plugin>
		<!-- 
				maven-compiler-plugin
		-->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.0</version>
			<configuration>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
		</plugin>
		<!-- 
        		maven-war-plugin
        -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.1-beta-1</version>
			<configuration>
				<webResources>
					<resource>
						<directory>src/main/webapp</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/appengine-web.xml</include>
						</includes>
					</resource>
				</webResources>
			</configuration>
		</plugin>
	</plugins>
  </build>
  <!-- Specify hard-coded project properties here -->
  <properties>
  	<!-- 
  		 	Sets the project's default encoding.
         	http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding
  	-->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<!--
			This is just for "eclipse:eclipse" goal to always attempt downloading
			sources
	-->
	<downloadSources>true</downloadSources>
	<!--
			Specify AppEngine version for your project. It should match SDK
			version pointed to by ${gae.home} property (Typically, one used by
			your Eclipse plug-in)
	-->
	<gae.version>1.4.3</gae.version>
	<!--
			Upload to http://test.latest.<applicationName>.appspot.com by default
	-->
	<gae.application.version>test</gae.application.version>
    <!-- 
			Specify RESTEasy Version for your project
	-->
    <resteasy.version>2.2-beta-1</resteasy.version>
    <!-- 
			Specify Spring Version for your project
	-->
    <spring.version>2.5.6</spring.version>
  </properties>
  <profiles>
	<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
	-->
	<profile>
		<id>integration-build</id>
		<properties>
			<gae.application.version>stage</gae.application.version>
		</properties>
	</profile>
	<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
	-->
	<profile>
		<id>release-build</id>
		<activation>
			<property>
				<name>performRelease</name>
				<value>true</value>
			</property>
		</activation>
		<properties>
			<!--
					During release, set application version in appengine-web.xml to 2
			-->
			<gae.application.version>release</gae.application.version>
		</properties>
	</profile>
  </profiles>
</project>
